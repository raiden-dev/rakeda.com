{"version":3,"file":"ProjectView.js","sources":["../../../../src/app/views/ProjectView.js"],"names":["define","AbstractView","projectTemplate","ProjectView","extend","el","template","getTemplateData","options","deferred","$","Deferred","require","name","projectNameTemplate","Handlebars","partials","projectName","resolve","bind","this","promise","onAfterRender","$splash","$el","find","$objects","$loader","hide","show","$img","imgCount","length","imgLoaded","imgLoadDeferred","$video","videoCount","videoLoaded","videoLoadDeferred","on","when","done","window","off","$arrow","windowHeight","height","offsetBottom","offset","top","opacity","scrollTop","css","animate"],"mappings":"AAAAA,QACE,qBACA,oBAEA,YACC,SAAUC,EAAcC,GAEzB,GAAIC,GAAcF,EAAaG,QAE7BC,GAAI,QAEJC,SAAUJ,EAEVK,gBAAiB,SAAUC,GACzB,GAAIC,GAAW,GAAIC,GAAEC,QAQrB,OANAC,UAAS,aAAeJ,EAAQK,MAChC,SAAUC,GACRC,WAAWC,SAASC,YAAcH,EAClCL,EAASS,WACTC,KAAKC,OAEAX,EAASY,WAGlBC,cAAe,WACb,GAAIC,GAAUH,KAAKI,IAAIC,KAAK,oBACxBC,EAAWN,KAAKI,IAAIC,KAAK,qBACzBE,EAAUP,KAAKI,IAAIC,KAAK,UAE5BF,GAAQK,OACRF,EAASE,OACTD,EAAQE,MAER,IAAIC,GAAOV,KAAKI,IAAIC,KAAK,OACrBM,EAAWD,EAAKE,OAChBC,EAAY,EACZC,EAAkB,GAAIxB,GAAEC,SAExBwB,EAASf,KAAKI,IAAIC,KAAK,SACvBW,EAAaD,EAAOH,OACpBK,EAAc,EACdC,EAAoB,GAAI5B,GAAEC,QAE1BwB,GAAOH,OACTG,EAAOI,GAAG,aAAc,WACtBF,IAEIA,IAAgBD,GAClBE,EAAkBpB,YAKtBoB,EAAkBpB,UAGhBY,EAAKE,OACPF,EAAKS,GAAG,OAAQ,WACdN,IAEIA,IAAcF,GAChBG,EAAgBhB,YAKpBgB,EAAgBhB,UAGlBR,EAAE8B,KAAKN,EAAiBI,GACrBG,KAAK,WACJd,EAAQC,OACRL,EAAQM,OACRH,EAASG,SAGbnB,EAAEgC,QAAQC,IAAI,UAAUJ,GAAG,SAAU,WACnC,GAAIK,GAASxB,KAAKI,IAAIC,KAAK,cACvBoB,EAAenC,EAAEgC,QAAQI,SACzBC,EAAeF,EAAeD,EAAOI,SAASC,IAAML,EAAOE,SAC3DI,EAAU,EAAIxC,EAAEgC,QAAQS,aAAeN,EAAeE,EAEtDG,IAAW,GACbN,EAAOQ,IAAI,UAAWF,IAExB/B,KAAKC,OAEPA,KAAKI,IAAIC,KAAK,cAAckB,IAAI,SAASJ,GAAG,QAAS,WACnD7B,EAAE,cAAc2C,SACdF,UAAWzC,EAAEgC,QAAQI,UACrB,SAMR,OAAO3C","sourcesContent":["define([\n  'views/AbstractView',\n  'templates/project',\n\n  'backbone'\n], function (AbstractView, projectTemplate) {\n\n  var ProjectView = AbstractView.extend({\n\n    el: '#main',\n\n    template: projectTemplate,\n\n    getTemplateData: function (options) {\n      var deferred = new $.Deferred();\n\n      require(['templates/' + options.name],\n      function (projectNameTemplate) {\n        Handlebars.partials.projectName = projectNameTemplate;\n        deferred.resolve();\n      }.bind(this));\n\n      return deferred.promise();\n    },\n\n    onAfterRender: function () {\n      var $splash = this.$el.find('.project__splash'),\n          $objects = this.$el.find('.project__objects'),\n          $loader = this.$el.find('.loader');\n\n      $splash.hide();\n      $objects.hide();\n      $loader.show();\n\n      var $img = this.$el.find('img'),\n          imgCount = $img.length,\n          imgLoaded = 0,\n          imgLoadDeferred = new $.Deferred();\n\n      var $video = this.$el.find('video'),\n          videoCount = $video.length,\n          videoLoaded = 0,\n          videoLoadDeferred = new $.Deferred();\n\n      if ($video.length) {\n        $video.on('loadeddata', function () {\n          videoLoaded++;\n\n          if (videoLoaded === videoCount) {\n            videoLoadDeferred.resolve();\n          }\n        });\n      }\n      else {\n        videoLoadDeferred.resolve();\n      }\n\n      if ($img.length) {\n        $img.on('load', function () {\n          imgLoaded++;\n\n          if (imgLoaded === imgCount) {\n            imgLoadDeferred.resolve();\n          }\n        });\n      }\n      else {\n        imgLoadDeferred.resolve();\n      }\n\n      $.when(imgLoadDeferred, videoLoadDeferred)\n        .done(function () {\n          $loader.hide();\n          $splash.show();\n          $objects.show();\n        });\n\n      $(window).off('scroll').on('scroll', function () {\n        var $arrow = this.$el.find('.js-scroll'),\n            windowHeight = $(window).height(),\n            offsetBottom = windowHeight - $arrow.offset().top - $arrow.height(),\n            opacity = 1 - $(window).scrollTop() / (windowHeight - offsetBottom);\n\n        if (opacity >= 0) {\n          $arrow.css('opacity', opacity);\n        }\n      }.bind(this));\n\n      this.$el.find('.js-scroll').off('click').on('click', function () {\n        $('html, body').animate({\n          scrollTop: $(window).height()\n       }, 500);\n      });\n    }\n\n  });\n\n  return ProjectView;\n\n});\n"]}